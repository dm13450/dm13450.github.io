---
layout: post
title: An Introduction to Julia and Distributions
---

Julia is a new language on the block aimed at being a suitable mid point between the adaptability of python and the speed of Matlab. Its a nice fallback when my R code is just that bit too slow to really churn through some numbers. 

On of the main benefits of using R is the ease at which the `standard' distribtuions are availble. Want expoentially distributed random variables? Just call rexp()! Want the pdf of the gamma distribution? dgamma() is there to help you. With Julia this type of functionality is in the Distribution module, so takes just a little bit more of work to get the same functionality.  

In this post I will outline how the basics of the distributions package and how you can replicate some of the functionality of R.

Firstly, we need to install the Distribtuions package....


Now that is installed, open a new julia instance and load the package with `using Distributions`. The nessecary functions are now loaded. 

Our first exercise will be to sample $$N$$ exponentially distributed variables and check that the density of the samples tends to the pdf of the expoential distribution as $$N$$ becomes larger. 

The first step in this code is to define our distriubtion. As the exponential distribution only requires one parameter, $$\theta$$, this is as simple as calling `Exponential($$\theta$$)` in our code. Now we use a number of differenet functions on the distribution. 

We can sample from this distribution using `rand(dist, N)` where $$N$$ is the number of samples to draw.We can then overlay the pdf of the distriubtion by using `pdf(dist, x)`. 

Combing these commands allows us to draw a graph like this:




There are also other functions available. A great example is calculating the mean of a log-normal distribution. This distribution is defined with two parameters; $$\mu$$ and $$\sigma ^2$$. However, the mean of the distribution is not equal to $$\mu$$. Instead it is...EXPR FOR LN MEAN. The Distributions package in Julia knows this. So by simply calling `mean` on the `LogNormal($$\mu$$, $$\sigma^2$$)` object you return the value of .... 



 

 


