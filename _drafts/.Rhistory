lnKernParams = lapply(HPObjectExtractKernelParamsLogNormal(terrorHawkesResultsParametric$lnKernel[[1]]), function(x) x[-(1:burninParametric)])
dim(lnKernParam)
length(lnKernParam)
length(lnKernParam$mu)
length(expKernParams)
burninParametric
expKernParams = HPObjectExtractKernelParamsExp(terrorHawkesResultsParametric$expKernel[[1]])[-(1:burninParametric)]
geoKernParams = HPObjectExtractKernelParamsExp(terrorHawkesResultsParametric$geoKernel[[1]])[-(1:burninParametric)]
lnKernParams = lapply(HPObjectExtractKernelParamsLogNormal(terrorHawkesResultsParametric$lnKernel[[1]]), function(x) x[-(1:burninParametric)])
expKernParams = mean(HPObjectExtractKernelParamsExp(terrorHawkesResultsParametric$expKernel[[1]])[-(1:burninParametric)])
geoKernParams = mean(HPObjectExtractKernelParamsExp(terrorHawkesResultsParametric$geoKernel[[1]])[-(1:burninParametric)])
lnKernParams = lapply(HPObjectExtractKernelParamsLogNormal(terrorHawkesResultsParametric$lnKernel[[1]]), function(x) mean(x[-(1:burninParametric)]))
expKernParams
t = seq(0, max(eventTimes), by=0.1)
max(t)
t
y = gather(data.frame(dexp(t, expKernParams), dlnorm(t, lnKernParams$mu, lnKernParams$sd), geoFunc(t) ))
geoFunc = GeometricKernelCreate(initialValue = geoKernParams)
t = seq(0, max(eventTimes), by=0.1)
y = gather(data.frame(dexp(t, expKernParams), dlnorm(t, lnKernParams$mu, lnKernParams$sd), geoFunc(t) ))
y = gather(data.frame(dexp(t, expKernParams), dlnorm(t, lnKernParams$mu, lnKernParams$sd), geoFunc$func(t) ))
head(y)
y$t = t
ggplot(y, aes(x=t, y=value, colour=key) ) + geom_line()
ggplot(y, aes(x=t, y=value, colour=key) ) + geom_line() + scale_x_log10()
t = seq(0, max(eventTimes)/100, by=0.1)
y = gather(data.frame(exp = dexp(t, expKernParams), ln=dlnorm(t, lnKernParams$mu, lnKernParams$sd), geo = geoFunc$func(t)))
y$t = t
ggplot(y, aes(x=t, y=value, colour=key) ) + geom_line()
t = seq(0, max(eventTimes)/10, by=0.1)
y = gather(data.frame(exp = dexp(t, expKernParams), ln=dlnorm(t, lnKernParams$mu, lnKernParams$sd), geo = geoFunc$func(t)))
y$t = t
ggplot(y, aes(x=t, y=value, colour=key) ) + geom_line()
eventTimes
t = seq(0, 500, by=0.1)
y = gather(data.frame(exp = dexp(t, expKernParams), ln=dlnorm(t, lnKernParams$mu, lnKernParams$sd), geo = geoFunc$func(t)))
y$t = t
ggplot(y, aes(x=t, y=value, colour=key) ) + geom_line()
ggplot(parametricVals, aes(x=value, colour=key)) + geom_density() + facet_wrap(~Param, scales="free")
head(parametricVals)
expInten = HawkesIntensityFunc(t, eventTimes, mean(filter(parametricVals, key=="expKernel", Param=="Base")), ExponentialKernelCreate(initialValue = expKernParams)$func, mean(filter(parametricVals, key=="expKernel", Param=="Kappa")))
parametricVals = rbind(baseVals, kappaVals)
expInten = HawkesIntensityFunc(t, eventTimes, mean(filter(parametricVals, key=="expKernel", Param=="Base")), ExponentialKernelCreate(initialValue = expKernParams)$func, mean(filter(parametricVals, key=="expKernel", Param=="Kappa")))
filter(parametricVals, key=="expKernel", Param=="Base")
expInten = HawkesIntensityFunc(t, eventTimes, mean(filter(parametricVals, key=="expKernel", Param=="Base")$value), ExponentialKernelCreate(initialValue = expKernParams)$func, mean(filter(parametricVals, key=="expKernel", Param=="Kappa")$value))
lnInten =  HawkesIntensityFunc(t, eventTimes, mean(filter(parametricVals, key=="lnKernel", Param=="Base")$value), LogNormalKernalGenerator(c(lnKernParams$mu, lnKernParams$sd))$func, mean(filter(parametricVals, key=="lnKernel", Param=="Kappa")$value))
geoInten = HawkesIntensityFunc(t, eventTimes, mean(filter(parametricVals, key=="geoKernel", Param=="Base")$value), GeometricKernelCreate(initialValue = geoKernParams)$func, mean(filter(parametricVals, key=="geoKernel", Param=="Kappa")$value))
ggplot(intenFrame, aes(x=t, y=value, colour=key)) + geom_line()
intenFrame = gather(data.frame(expInten, lnInten, geoInten))
intenFrame$t = t
ggplot(intenFrame, aes(x=t, y=value, colour=key)) + geom_line()
t = seq(0, max(eventTimes), by=0.1)
expInten = HawkesIntensityFunc(t, eventTimes, mean(filter(parametricVals, key=="expKernel", Param=="Base")$value), ExponentialKernelCreate(initialValue = expKernParams)$func, mean(filter(parametricVals, key=="expKernel", Param=="Kappa")$value))
lnInten =  HawkesIntensityFunc(t, eventTimes, mean(filter(parametricVals, key=="lnKernel", Param=="Base")$value), LogNormalKernalGenerator(c(lnKernParams$mu, lnKernParams$sd))$func, mean(filter(parametricVals, key=="lnKernel", Param=="Kappa")$value))
geoInten = HawkesIntensityFunc(t, eventTimes, mean(filter(parametricVals, key=="geoKernel", Param=="Base")$value), GeometricKernelCreate(initialValue = geoKernParams)$func, mean(filter(parametricVals, key=="geoKernel", Param=="Kappa")$value))
intenFrame = gather(data.frame(expInten, lnInten, geoInten))
intenFrame$t = t
ggplot(intenFrame, aes(x=t, y=value, colour=key)) + geom_line()
ggplot(y, aes(x=t, y=value, colour=key) ) + geom_line() + geom_point(data=eventTimes)
ggplot(y, aes(x=t, y=value, colour=key) ) + geom_line() + geom_point(data=data.frame(eventTimes))
ggplot(y, aes(x=t, y=value, colour=key) ) + geom_line() + geom_point(data=data.frame(t = eventTimes, y = mean(y)))
ggplot(y, aes(x=t, y=value, colour=key) ) + geom_line() + geom_point(data=data.frame(t = eventTimes, y = mean(y$value)))
pointFrame= data.frame(t=eventTimes)
ggplot(y, aes(x=t, y=value, colour=key) ) + geom_line() + geom_point(data=pointFrame)
head(y)
pointFrame= data.frame(t=eventTimes, value = 0)
ggplot(y, aes(x=t, y=value, colour=key) ) + geom_line() + geom_point(data=pointFrame)
ggplot(y, aes(x=t, y=value, colour=key) ) + geom_line() + geom_point(data=pointFrame, aes(x=t,y=value))
ggplot(y, aes(x=t, y=value)) + geom_line(colour=key) + geom_point(data=pointFrame, aes(x=t,y=value))
head(y)
ggplot(y, aes(x=t, y=value)) + geom_line(aes(colour=key)) + geom_point(data=pointFrame, aes(x=t,y=value))
ggplot(y, aes(x=t, y=value)) + geom_line(aes(colour=key)) + geom_point(data=pointFrame, x=t,y=value)
ggplot(y, aes(x=t, y=value)) + geom_line(aes(colour=key))
ggplot(intenFrame, aes(x=t, y=value, colour=key)) + geom_line() + geom_point(data=pointFrame, x=t,y=value)
ggplot(intenFrame, aes(x=t, y=value, colour=key)) + geom_line()
t = seq(0, max(eventTimes), by=1)
expInten = HawkesIntensityFunc(t, eventTimes, mean(filter(parametricVals, key=="expKernel", Param=="Base")$value), ExponentialKernelCreate(initialValue = expKernParams)$func, mean(filter(parametricVals, key=="expKernel", Param=="Kappa")$value))
lnInten =  HawkesIntensityFunc(t, eventTimes, mean(filter(parametricVals, key=="lnKernel", Param=="Base")$value), LogNormalKernalGenerator(c(lnKernParams$mu, lnKernParams$sd))$func, mean(filter(parametricVals, key=="lnKernel", Param=="Kappa")$value))
geoInten = HawkesIntensityFunc(t, eventTimes, mean(filter(parametricVals, key=="geoKernel", Param=="Base")$value), GeometricKernelCreate(initialValue = geoKernParams)$func, mean(filter(parametricVals, key=="geoKernel", Param=="Kappa")$value))
intenFrame = gather(data.frame(expInten, lnInten, geoInten))
intenFrame$t = t
ggplot(intenFrame, aes(x=t, y=value, colour=key)) + geom_line()
head(extremeValsFrame)
head(intenFrame)
tail(extremeValsFrame)
ggplot(modelCheckFrame, aes(x=value, fill=key)) + geom_density(alpha=0.5) + facet_wrap(~MaxTime, scales="free")
ls()
hpObjList[[1]]
source('~/Documents/PhD/Research/Hawkes/HawkesFunctional.R')
a = HPFitObjectExtractKernelFunction(dirFitRes[[1]])
a[[1]]
a[[2]]
a[[2]](1)
modelCheckFrame = HawkesProcessParametricModelCheck(eventTimes, 1000, 900, 1)
ggplot(modelCheckFrame, aes(x=value, fill=key)) + geom_density(alpha=0.5) + facet_wrap(~MaxTime, scales="free")
head(modelCheckFrame)
tail(modelCheckFrame)
ggplot(modelCheckFrame, aes(x=value, fill=key)) + geom_density(alpha=0.5)
ggplot(modelCheckFrame, aes(x=value, fill=key)) + geom_density(alpha=0.5) + facet_wrap(~EventPredictTime, scales="free")
dirGeoFitRes = HawkesProcessFullFitDirichletGeometricKernel(eventTimes, 500, 100)
a = HPFitObjectExtractKernelFunction(dirGeoFitRes[[1]])
a[[1]](1)
a[[2]](1)
b = lapply(a, function(x) x(c(1:500)))
b[[1]]
b2 = Reduce(sum, b)
b2 = b2/length(b)
plot(b2)
b2
b[[1]]
plot(b[[100]])
plot(b[[200]])
plot(b[[500]])
b2 = Reduce("+", b)
b2 = b2/length(b)
plot(b2)
source('~/Documents/PhD/Research/Hawkes/HawkesFunctional.R')
modelCheckFrame = HawkesProcessParametricModelCheck(eventTimes, 1000, 900, 1)
ggplot(modelCheckFrame, aes(x=value, fill=key)) + geom_density(alpha=0.5) + facet_wrap(~EventPredictTime, scales="free")
source('~/Documents/PhD/Research/Hawkes/HawkesFunctional.R')
rm(modelCheckFrame)
modelCheckFrame = HawkesProcessParametricModelCheck(eventTimes, 1000, 900, 1)
warnings()
trainPts
eventTimes
modelCheckFrame = HawkesProcessParametricModelCheck(eventTimes, 100, 90, 1)
detectCores()
cl
stopCluster(cl)
summary(cl)
closeAllConnections()
HawkesIntensityFunc
HPFitObjectExtractKernelFunction(geoFitRes[[1]])
a = HPFitObjectExtractKernelFunction(geoFitRes[[1]])
a[1]
a[[1]]
a[[1]](1)
a[1](1)
source('~/Documents/PhD/Research/Hawkes/HawkesFunctional.R')
modelCheckFrame = HawkesProcessParametricModelCheck(eventTimes, 100, 90, 1)
stopCluster(cl)
closeAllConnections()
pts = eventTimes, sims=100, burnin=90, numPoints=1
pts = eventTimes; sims=100; burnin=90; numPoints=1
i = 0
ncores = detectCores() - 1
probFrameList = list()
trainPts = pts[1:(length(pts)-numPoints+i)]
startParams = runif(4)
mlExp = optim(startParams[-4], HawkesLikelihoodFunc, events=trainPts, kernel="exp")
mlLogNormal = optim(startParams, HawkesLikelihoodFunc, events=trainPts, kernel="lognormal")
mlGeometric = optim(startParams[-4], HawkesLikelihoodFunc, events=trainPts, kernel="geometric")
mlExp$par
mlLogNormal$par
mlGeometric$par
hpObjExpKernel = HawkesProcessObjectCreate(trainPts, mlExp$par[1], mlExp$par[2], ExponentialKernelCreate(initialValue = mlExp$par[3]))
hpObjLNKernel = HawkesProcessObjectCreate(trainPts, mlLogNormal$par[1], mlLogNormal$par[2], LogNormalKernelCreate(initialValue = mlLogNormal$par[3:4]))
hpObjGeoKernel = HawkesProcessObjectCreate(trainPts, mlGeometric$par[1], mlGeometric$par[2], GeometricKernelCreate(initialValue = mlGeometric$par[3]))
hpObjDirLNKernel = HawkesProcessObjectCreate(trainPts, mlLogNormal$par[1], mlLogNormal$par[2], DirichletKernelCreate(sims=100))
hpObjDirGeoKernel = HawkesProcessObjectCreate(trainPts, mlGeometric$par[1], mlGeometric$par[2], DirichletGeometricKernelCreate(sims = 100))
hpObjList = list(hpObjExpKernel, hpObjLNKernel, hpObjGeoKernel, hpObjDirLNKernel, hpObjDirGeoKernel)
lapply(hpObjList, function(x) HawkesProcessFit(x, 10))
hpfit = lapply(hpObjList, function(x) HawkesProcessFit(x, 10))
baseList = lapply(hpfit, function(x) x$baseVals[-(1:burnin)])
expBase = baseList[[1]]
lnBase = baseList[[2]]
geoBase = baseList[[3]]
dirLNBase = baseList[[4]]
dirGeoBase = baseList[[5]]
kappaList = lapply(hpfit, function(x) x$kappaVals[-(1:burnin)])
expKappa = kappaList[[1]]
lnKappa = kappaList[[2]]
geoKappa = kappaList[[3]]
dirLNKappa = kappaList[[4]]
dirGeoKappa = kappaList[[5]]
expKern = HPFitObjectExtractKernelFunction(hpfit[[1]])[-(1:burnin)]
lnKern = HPFitObjectExtractKernelFunction(hpfit[[2]])[-(1:burnin)]
geoKern = HPFitObjectExtractKernelFunction(hpfit[[3]])[-(1:burnin)]
dirLnKern = HPFitObjectExtractKernelFunction(hpfit[[4]])[-(1:burnin)]
dirGeoKern = HPFitObjectExtractKernelFunction(hpfit[[5]])[-(1:burnin)]
t1 = max(trainPts)
t2 = pts[which.max(trainPts) + 1]
nprobs = sims-burnin
probExp = numeric(nprobs)
probLn = numeric(nprobs)
probGeo = numeric(nprobs)
probDirLn = numeric(nprobs)
probDirGeo = numeric(nprobs)
j=1
for(j in seq_len(nprobs)){
probExp[j] = exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, expBase[j], expKern[[j]] ,expKappa[j]), t1, t2)$value)
probLn[j] = exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, lnBase[j], lnKernp[[j]], lnKappa[j]), t1, t2)$value)
probGeo[j] = exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, geoBase[j], geoKern[[j]], geoKappa[j]), t1, t2)$value)
probDirLn[j] = exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, dirLNBase[j], dirLnKern[[j]], dirLNKappa[j]), t1, t2)$value)
probDirGeo[j] = exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, dirGeoBase[j], dirGeoKern[[j]], dirGeoKappa[j]), t1, t2)$value)
}
j
expKern[[1]]
expKern[1]
hpfit[[1]]
burnin
hpfit[[1]]$kernObjList[[100]]
hpfit[[1]]$kernObjList[[1]]
length(hpfit[[1]]$kernObjList)
hpfit = lapply(hpObjList, function(x) HawkesProcessFit(x, sims))
hpfit = lapply(hpObjList, function(x) HawkesProcessFit(x, sims))
baseList = lapply(hpfit, function(x) x$baseVals[-(1:burnin)])
expBase = baseList[[1]]
lnBase = baseList[[2]]
geoBase = baseList[[3]]
dirLNBase = baseList[[4]]
dirGeoBase = baseList[[5]]
kappaList = lapply(hpfit, function(x) x$kappaVals[-(1:burnin)])
expKappa = kappaList[[1]]
lnKappa = kappaList[[2]]
geoKappa = kappaList[[3]]
dirLNKappa = kappaList[[4]]
dirGeoKappa = kappaList[[5]]
expKern = HPFitObjectExtractKernelFunction(hpfit[[1]])[-(1:burnin)]
lnKern = HPFitObjectExtractKernelFunction(hpfit[[2]])[-(1:burnin)]
geoKern = HPFitObjectExtractKernelFunction(hpfit[[3]])[-(1:burnin)]
dirLnKern = HPFitObjectExtractKernelFunction(hpfit[[4]])[-(1:burnin)]
dirGeoKern = HPFitObjectExtractKernelFunction(hpfit[[5]])[-(1:burnin)]
t1 = max(trainPts)
t2 = pts[which.max(trainPts) + 1]
nprobs = sims-burnin
probExp = numeric(nprobs)
probLn = numeric(nprobs)
probGeo = numeric(nprobs)
probDirLn = numeric(nprobs)
probDirGeo = numeric(nprobs)
j=1
for(j in seq_len(nprobs)){
probExp[j] = exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, expBase[j], expKern[[j]] ,expKappa[j]), t1, t2)$value)
probLn[j] = exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, lnBase[j], lnKernp[[j]], lnKappa[j]), t1, t2)$value)
probGeo[j] = exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, geoBase[j], geoKern[[j]], geoKappa[j]), t1, t2)$value)
probDirLn[j] = exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, dirLNBase[j], dirLnKern[[j]], dirLNKappa[j]), t1, t2)$value)
probDirGeo[j] = exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, dirGeoBase[j], dirGeoKern[[j]], dirGeoKappa[j]), t1, t2)$value)
}
j=1
for(j in seq_len(nprobs)){
probExp[j] = exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, expBase[j], expKern[[j]] ,expKappa[j]), t1, t2)$value)
probLn[j] = exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, lnBase[j], lnKern[[j]], lnKappa[j]), t1, t2)$value)
probGeo[j] = exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, geoBase[j], geoKern[[j]], geoKappa[j]), t1, t2)$value)
probDirLn[j] = exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, dirLNBase[j], dirLnKern[[j]], dirLNKappa[j]), t1, t2)$value)
probDirGeo[j] = exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, dirGeoBase[j], dirGeoKern[[j]], dirGeoKappa[j]), t1, t2)$value)
}
j
head(probExp)
head(probDirLn)
head(probDirGeo)
nprobs
probExp = numeric(nprobs)
probLn = numeric(nprobs)
probGeo = numeric(nprobs)
probDirLn = numeric(nprobs)
probDirGeo = numeric(nprobs)
j=1
for(j in seq_len(nprobs)){
print(j)
probExp[j] = exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, expBase[j], expKern[[j]] ,expKappa[j]), t1, t2)$value)
probLn[j] = exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, lnBase[j], lnKern[[j]], lnKappa[j]), t1, t2)$value)
probGeo[j] = exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, geoBase[j], geoKern[[j]], geoKappa[j]), t1, t2)$value)
probDirLn[j] = exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, dirLNBase[j], dirLnKern[[j]], dirLNKappa[j]), t1, t2)$value)
probDirGeo[j] = exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, dirGeoBase[j], dirGeoKern[[j]], dirGeoKappa[j]), t1, t2)$value)
}
probFrame = gather(data.frame(probExp, probLn, probGeo, probDirLn, probDirGeo))
head(probFrame)
ggplot(probFrame, aes(x=value, fill=key)) + geom_density()
ggplot(probFrame, aes(x=value, fill=key)) + geom_density(alpha=0.5)
source('~/Documents/PhD/Research/Hawkes/HawkesFunctional.R')
mean(expBase)
mean(lnBase)
mean(geoBase)
mean(dirLNBase)
mean(dirGeoBase)
sd(dirGeoBase)
j
probExp[j] = exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, expBase[j], expKern[[j]] ,expKappa[j]), t1, t2)$value)
probLn[j] = exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, lnBase[j], lnKern[[j]], lnKappa[j]), t1, t2)$value)
probGeo[j] = exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, geoBase[j], geoKern[[j]], geoKappa[j]), t1, t2)$value)
probDirLn[j] = exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, dirLNBase[j], dirLnKern[[j]], dirLNKappa[j]), t1, t2)$value)
probDirGeo[j] = exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, dirGeoBase[j], dirGeoKern[[j]], dirGeoKappa[j]), t1, t2)$value)
dirLnKern[[j]]
dirLnKern[[j]](1)
dirLnKern[[j]](2)
t1-
t2
HawkesIntensityFunc(c(1:10), trainPts, dirLNBase[j], dirLnKern[[j]], dirLNKappa[j])
plot(HawkesIntensityFunc(c(1:10), trainPts, dirLNBase[j], dirLnKern[[j]], dirLNKappa[j]))
plot(HawkesIntensityFunc(c(1:100), trainPts, dirLNBase[j], dirLnKern[[j]], dirLNKappa[j]))
plot(HawkesIntensityFunc(c(1:200), trainPts, dirLNBase[j], dirLnKern[[j]], dirLNKappa[j]))
exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, dirLNBase[j], dirLnKern[[j]], dirLNKappa[j]), t1, t2)$value)
profvis({exp(-1*integrate(function(t) HawkesIntensityFunc(t, trainPts, dirLNBase[j], dirLnKern[[j]], dirLNKappa[j]), t1, t2)$value)})
plot(HawkesIntensityFunc(c(1:200), trainPts, dirGeoBase[j], dirGeoKern[[j]], dirGeoKappa[j])
)
dirGeoKern[[10]](1)
trainPts
plot(HawkesIntensityFunc(c(1:max(trainPts)), trainPts, dirGeoBase[j], dirGeoKern[[j]], dirGeoKappa[j])
)
plot(HawkesIntensityFunc(c(1:max(trainPts)), trainPts, dirGeoBase[j], dirGeoKern[[j]], dirGeoKappa[j]), type="l")
integrate(function(t) HawkesIntensityFunc(t, trainPts, dirGeoBase[j], dirGeoKern[[j]], dirGeoKappa[j]), t1, t2)
integrate(function(t) HawkesIntensityFunc(t, trainPts, dirLNBase[j], dirLnKern[[j]], dirLNKappa[j]), t1, t2)
HawkesIntensityFunc(c(t1:t2), trainPts, dirLNBase[j], dirLnKern[[j]], dirLNKappa[j])
t1
t2
t2-t1
HawkesIntensityFunc(t1, trainPts, dirLNBase[j], dirLnKern[[j]], dirLNKappa[j])
HawkesIntensityFunc(t1+1, trainPts, dirLNBase[j], dirLnKern[[j]], dirLNKappa[j])
profvis({HawkesIntensityFunc(t1+1, trainPts, dirLNBase[j], dirLnKern[[j]], dirLNKappa[j]){)}
profvis({HawkesIntensityFunc(t1+1, trainPts, dirLNBase[j], dirLnKern[[j]], dirLNKappa[j])})
profvis({function() HawkesIntensityFunc(t1+1, trainPts, dirLNBase[j], dirLnKern[[j]], dirLNKappa[j])})
profvis({function() HawkesIntensityFunc(c(t1:t2), trainPts, dirLNBase[j], dirLnKern[[j]], dirLNKappa[j])})
profvis({HawkesIntensityFunc(c(t1:t2), trainPts, dirLNBase[j], dirLnKern[[j]], dirLNKappa[j])})
a = profvis({HawkesIntensityFunc(c(t1:t2), trainPts, dirLNBase[j], dirLnKern[[j]], dirLNKappa[j])})
print(a)
a
profvisOutput(a)
profvis::renderProfvis(a)
a
require(profvis)
a
closeAllConnections()
a
Sys.time()
source('~/Documents/PhD/Research/Hawkes/HawkesFunctional.R')
modelCheckFrame = HawkesProcessParametricModelCheck(eventTimes, 50, 25, 1)
ggplot(modelCheckFrame, aes(x=value, fill=key)) + geom_density(alpha=0.5) + facet_wrap(~EventPredictTime, scales="free")
modelCheckGraph = ggplot(modelCheckFrame, aes(x=value, fill=key)) + geom_density(alpha=0.5) + facet_wrap(~EventPredictTime, scales="free") + labels(x="Probability", y ="Density") + ggtitle("Model Check using t+1 prediction")
modelCheckGraph = ggplot(modelCheckFrame, aes(x=value, fill=key)) + geom_density(alpha=0.5) + facet_wrap(~EventPredictTime, scales="free") + labs(x="Probability", y ="Density") + ggtitle("Model Check using t+1 prediction")
modelCheckGraph
modelCheckGraph = ggplot(modelCheckFrame, aes(x=value, fill=key)) + geom_density(alpha=0.5) + facet_wrap(~EventPredictTime, scales="free") + labs(x="Probability", y ="Density") + ggtitle("Model Check using t+1 prediction") + theme(legend.title="Kernel")
modelCheckGraph = ggplot(modelCheckFrame, aes(x=value, fill=key)) + geom_density(alpha=0.5) + facet_wrap(~EventPredictTime, scales="free") + labs(x="Probability", y ="Density") + ggtitle("Model Check using t+1 prediction") + theme(legend.title=element_blank())
modelCheckGraph
dirGeoFitRes = HawkesProcessFullFitDirichletGeometricKernel(eventTimes, 500, 100)
terrorHawkesResultsParametric = list(expKernel = expFitRes, lnKernel=lnFitRes, geoKernel=geoFitRes, dirLNKernel=dirFitRes, dirGeoKernel=dirGeoFitRes)
baseVals = gather(data.frame(lapply(terrorHawkesResultsParametric, function(x) x[[1]]$baseVals[-(1:burninParametric)])))
baseVals$Param = "Base"
kappaVals = gather(data.frame(lapply(terrorHawkesResultsParametric, function(x) x[[1]]$kappaVals[-(1:burninParametric)])))
kappaVals$Param = "Kappa"
parametricVals = rbind(baseVals, kappaVals)
ggplot(parametricVals, aes(x=value, colour=key)) + geom_density() + facet_wrap(~Param, scales="free")
burninParametric = 2
burninNonPara = 5
terrorHawkesResultsParametric = list(expKernel = expFitRes, lnKernel=lnFitRes, geoKernel=geoFitRes, dirLNKernel=dirFitRes, dirGeoKernel=dirGeoFitRes)
baseVals = gather(data.frame(lapply(terrorHawkesResultsParametric, function(x) x[[1]]$baseVals[-(1:burninParametric)])))
baseVals$Param = "Base"
kappaVals = gather(data.frame(lapply(terrorHawkesResultsParametric, function(x) x[[1]]$kappaVals[-(1:burninParametric)])))
kappaVals$Param = "Kappa"
parametricVals = rbind(baseVals, kappaVals)
ggplot(parametricVals, aes(x=value, colour=key)) + geom_density() + facet_wrap(~Param, scales="free")
dirGeoFitRes[[1]]$kappaVals
mean(dirGeoFitRes[[1]]$kappaVals)
terrorHawkesResultsParametric = list(expKernel = expFitRes, lnKernel=lnFitRes, geoKernel=geoFitRes)
kappaVals = gather(data.frame(lapply(terrorHawkesResultsParametric, function(x) x[[1]]$kappaVals[-(1:burninParametric)])))
mean(kappaVals)
summary(kappaVals)
mean(dirGeoFitRes[[1]]$kappaVals)
HPFitObjectExtractKernelFunction(dirGeoFitRes[[1]])
a = Reduce("+", lapply(HPFitObjectExtractKernelFunction(dirGeoFitRes[[1]]), function(x) x(c(1:100))))
a
a = Reduce("+", lapply(HPFitObjectExtractKernelFunction(dirGeoFitRes[[1]]), function(x) x(c(1:100))))/500
plot(a)
ggplot(y, aes(x=t, y=value)) + geom_line(aes(colour=key))
a
ggplot(y, aes(x=t, y=value)) + geom_line(aes(colour=key)) + geom_line(a)
ggplot(y, aes(x=t, y=value)) + geom_line(aes(colour=key)) + geom_line(data.frame(a))
a = Reduce("+", lapply(HPFitObjectExtractKernelFunction(dirGeoFitRes[[1]]), function(x) x(c(0:100))))/500
a
terrorHawkesResultsNonParametric = list(dirLnKernal = dirFitRes, dirGeoKernel=dirGeoFitRes)
baseVals = gather(data.frame(lapply(terrorHawkesResultsParametric, function(x) x[[1]]$baseVals[-(1:burninParametric)]),lapply(terrorHawkesResultsNonParametric, function(x) x[[1]]$baseVals[-(1:burninNonParametric)])))
baseVals = gather(data.frame(lapply(terrorHawkesResultsParametric, function(x) x[[1]]$baseVals[-(1:burninParametric)])))
baseVals = rbind(baseVals, gather(data.frame(lapply(terrorHawkesResultsNonParametric, function(x) x[[1]]$baseVals[-(1:burninNonParametric)]))))
burninNonParametric = 500
baseVals = rbind(baseVals, gather(data.frame(lapply(terrorHawkesResultsNonParametric, function(x) x[[1]]$baseVals[-(1:burninNonParametric)]))))
length(dirFitRes[[1]])
length(dirFitRes[[1]]$baseVals)
dirGeoFitRes = HawkesProcessFullFitDirichletGeometricKernel(eventTimes, 3000, 100)
terrorHawkesResultsParametric = list(expKernel = expFitRes, lnKernel=lnFitRes, geoKernel=geoFitRes)
terrorHawkesResultsNonParametric = list(dirLnKernal = dirFitRes, dirGeoKernel=dirGeoFitRes)
baseVals = gather(data.frame(lapply(terrorHawkesResultsParametric, function(x) x[[1]]$baseVals[-(1:burninParametric)])))
baseVals = rbind(baseVals, gather(data.frame(lapply(terrorHawkesResultsNonParametric, function(x) x[[1]]$baseVals[-(1:burninNonParametric)]))))
baseVals$Param = "Base"
kappaVals = gather(data.frame(lapply(terrorHawkesResultsParametric, function(x) x[[1]]$kappaVals[-(1:burninParametric)])))
kappaVals = rbind(baseVals, gather(data.frame(lapply(terrorHawkesResultsNonParametric, function(x) x[[1]]$kappaVals[-(1:burninNonParametric)]))))
kappaVals$Param = "Kappa"
parametricVals = rbind(baseVals, kappaVals)
ggplot(parametricVals, aes(x=value, colour=key)) + geom_density() + facet_wrap(~Param, scales="free")
terrorHawkesResultsParametric = list(expKernel = expFitRes, lnKernel=lnFitRes, geoKernel=geoFitRes)
terrorHawkesResultsNonParametric = list(dirLnKernal = dirFitRes, dirGeoKernel=dirGeoFitRes)
baseVals = gather(data.frame(lapply(terrorHawkesResultsParametric, function(x) x[[1]]$baseVals[-(1:burninParametric)])))
baseVals = rbind(baseVals, gather(data.frame(lapply(terrorHawkesResultsNonParametric, function(x) x[[1]]$baseVals[-(1:burninNonParametric)]))))
baseVals$Param = "Base"
kappaVals = gather(data.frame(lapply(terrorHawkesResultsParametric, function(x) x[[1]]$kappaVals[-(1:burninParametric)])))
kappaVals = rbind(kappaVals, gather(data.frame(lapply(terrorHawkesResultsNonParametric, function(x) x[[1]]$kappaVals[-(1:burninNonParametric)]))))
kappaVals$Param = "Kappa"
parametricVals = rbind(baseVals, kappaVals)
ggplot(parametricVals, aes(x=value, colour=key)) + geom_density() + facet_wrap(~Param, scales="free")
ggplot(parametricVals, aes(x=value, fill=key)) + geom_density(alpha=0.5) + facet_wrap(~Param, scales="free")
dirLNFunc = HPFitObjectExtractKernelFunction(terrorHawkesResultsNonParametric[[1]])
dirGeoFunc = HPFitObjectExtractKernelFunction(terrorHawkesResultsNonParametric[[2]])
dirLNFunc[[1]](1)
dirLNFunc
dirLNFunc = HPFitObjectExtractKernelFunction(terrorHawkesResultsNonParametric[[1]])
dirGeoFunc = HPFitObjectExtractKernelFunction(terrorHawkesResultsNonParametric[[2]])
dirLNFunc
dirGeoFunc
dirLNFunc = HPFitObjectExtractKernelFunction(terrorHawkesResultsNonParametric[[1]][[1]])
dirGeoFunc = HPFitObjectExtractKernelFunction(terrorHawkesResultsNonParametric[[2]][[1]])
dirLNFunc
dirLNFunc[[1]](1)
dirLNFuncEval = Reduce("+", lapply(dirLNFunc, function(y) y(x)))/length(dirLNFunc)
x = seq(0, 500, by=0.1)
dirLNFuncEval = Reduce("+", lapply(dirLNFunc, function(y) y(x)))/length(dirLNFunc)
dirLNFuncEval
plot(dirLNFuncEval)
x = seq(0, 500, by=0.1)
expKernParams = mean(HPObjectExtractKernelParamsExp(terrorHawkesResultsParametric$expKernel[[1]])[-(1:burninParametric)])
geoKernParams = mean(HPObjectExtractKernelParamsExp(terrorHawkesResultsParametric$geoKernel[[1]])[-(1:burninParametric)])
lnKernParams = lapply(HPObjectExtractKernelParamsLogNormal(terrorHawkesResultsParametric$lnKernel[[1]]), function(x) mean(x[-(1:burninParametric)]))
dirLNFunc = HPFitObjectExtractKernelFunction(terrorHawkesResultsNonParametric[[1]][[1]])[-(1:burninNonParametric)]
dirGeoFunc = HPFitObjectExtractKernelFunction(terrorHawkesResultsNonParametric[[2]][[1]])[-(1:burninNonParametric)]
geoFunc = GeometricKernelCreate(initialValue = geoKernParams)
dirLNFuncEval = Reduce("+", lapply(dirLNFunc, function(y) y(x)))/length(dirLNFunc)
dirGeoFuncEval = Reduce("+", lapply(dirGeoFunc, function(y) y(x)))/length(dirGeoFunc)
y = gather(data.frame(exp = dexp(x, expKernParams), ln=dlnorm(x, lnKernParams$mu, lnKernParams$sd), geo = geoFunc$func(x), geoDir = dirGeoFuncEval, lnDir=dirLNFuncEval))
y$t = x
ggplot(y, aes(x=t, y=value)) + geom_line(aes(colour=key))
ggplot(y, aes(x=t, y=value,colour=key)) + geom_line() + scale_x_log10()
ggplot(y, aes(x=t, y=value,colour=key)) + geom_line()
x = seq(1, 500, by=0.1)
expKernParams = mean(HPObjectExtractKernelParamsExp(terrorHawkesResultsParametric$expKernel[[1]])[-(1:burninParametric)])
geoKernParams = mean(HPObjectExtractKernelParamsExp(terrorHawkesResultsParametric$geoKernel[[1]])[-(1:burninParametric)])
lnKernParams = lapply(HPObjectExtractKernelParamsLogNormal(terrorHawkesResultsParametric$lnKernel[[1]]), function(x) mean(x[-(1:burninParametric)]))
dirLNFunc = HPFitObjectExtractKernelFunction(terrorHawkesResultsNonParametric[[1]][[1]])[-(1:burninNonParametric)]
dirGeoFunc = HPFitObjectExtractKernelFunction(terrorHawkesResultsNonParametric[[2]][[1]])[-(1:burninNonParametric)]
geoFunc = GeometricKernelCreate(initialValue = geoKernParams)
dirLNFuncEval = Reduce("+", lapply(dirLNFunc, function(y) y(x)))/length(dirLNFunc)
dirGeoFuncEval = Reduce("+", lapply(dirGeoFunc, function(y) y(x)))/length(dirGeoFunc)
y = gather(data.frame(exp = dexp(x, expKernParams), ln=dlnorm(x, lnKernParams$mu, lnKernParams$sd), geo = geoFunc$func(x), geoDir = dirGeoFuncEval, lnDir=dirLNFuncEval))
y$t = x
ggplot(y, aes(x=t, y=value,colour=key)) + geom_line()
dirFitRes[[1]]$hpobj$data
eventTimes
ggplot(modelCheckFrame, aes(x=value, fill=key)) + geom_density(alpha=0.5) + facet_wrap(~EventPredictTime, scales="free")
dirFitRes = HawkesProcessFullFitDirichletKernel(eventTimes, 3000, 100)
closeAllConnections()
dirFitRes = HawkesProcessFullFitDirichletKernel(eventTimes, 3000, 100)
length(eventTimes)
dirFitRes = HawkesProcessFullFitDirichletKernel(eventTimes, 3000, 100)
mlLogNormal = optim(c(1,1,1, 1), HawkesLikelihoodFunc, events=eventTimes, kernel="lognormal")
mlLogNormal$par
hpobj = HawkesProcessObjectCreate(eventTimes, mlLogNormal$par[1], mlLogNormal$par[2], DirichletKernelCreate(sims=dirichletIterations))
hpobj2 = HawkesProcessObjectCreate(eventTimes, 1, 1, DirichletKernelCreate(sims=dirichletIterations))
hpobj = HawkesProcessObjectCreate(eventTimes, mlLogNormal$par[1], mlLogNormal$par[2], DirichletKernelCreate(sims=100))
hpobj2 = HawkesProcessObjectCreate(eventTimes, 1, 1, DirichletKernelCreate(sims=100))
HawkesProcessFit(hpobj, 10)
HawkesProcessFit(hpobj2, 10)
dirFitRes = HawkesProcessFullFitDirichletKernel(eventTimes, 3000, 100)
closeAllConnections()
dirFitRes = HawkesProcessFullFitDirichletKernel(eventTimes, 3000, 100)
burninParametric = 2500
burninNonParametric = 500
terrorHawkesResultsParametric = list(expKernel = expFitRes, lnKernel=lnFitRes, geoKernel=geoFitRes)
terrorHawkesResultsNonParametric = list(dirLnKernal = dirFitRes, dirGeoKernel=dirGeoFitRes)
baseVals = gather(data.frame(lapply(terrorHawkesResultsParametric, function(x) x[[1]]$baseVals[-(1:burninParametric)])))
baseVals = rbind(baseVals, gather(data.frame(lapply(terrorHawkesResultsNonParametric, function(x) x[[1]]$baseVals[-(1:burninNonParametric)]))))
baseVals$Param = "Base"
kappaVals = gather(data.frame(lapply(terrorHawkesResultsParametric, function(x) x[[1]]$kappaVals[-(1:burninParametric)])))
kappaVals = rbind(kappaVals, gather(data.frame(lapply(terrorHawkesResultsNonParametric, function(x) x[[1]]$kappaVals[-(1:burninNonParametric)]))))
kappaVals$Param = "Kappa"
parametricVals = rbind(baseVals, kappaVals)
ggplot(parametricVals, aes(x=value, fill=key)) + geom_density(alpha=0.5) + facet_wrap(~Param, scales="free")
x = seq(1, 500, by=0.1)
expKernParams = mean(HPObjectExtractKernelParamsExp(terrorHawkesResultsParametric$expKernel[[1]])[-(1:burninParametric)])
geoKernParams = mean(HPObjectExtractKernelParamsExp(terrorHawkesResultsParametric$geoKernel[[1]])[-(1:burninParametric)])
lnKernParams = lapply(HPObjectExtractKernelParamsLogNormal(terrorHawkesResultsParametric$lnKernel[[1]]), function(x) mean(x[-(1:burninParametric)]))
dirLNFunc = HPFitObjectExtractKernelFunction(terrorHawkesResultsNonParametric[[1]][[1]])[-(1:burninNonParametric)]
dirGeoFunc = HPFitObjectExtractKernelFunction(terrorHawkesResultsNonParametric[[2]][[1]])[-(1:burninNonParametric)]
geoFunc = GeometricKernelCreate(initialValue = geoKernParams)
dirLNFuncEval = Reduce("+", lapply(dirLNFunc, function(y) y(x)))/length(dirLNFunc)
dirGeoFuncEval = Reduce("+", lapply(dirGeoFunc, function(y) y(x)))/length(dirGeoFunc)
y = gather(data.frame(exp = dexp(x, expKernParams), ln=dlnorm(x, lnKernParams$mu, lnKernParams$sd), geo = geoFunc$func(x), geoDir = dirGeoFuncEval, lnDir=dirLNFuncEval))
y$t = x
ggplot(y, aes(x=t, y=value,colour=key)) + geom_line()
ggplot(y, aes(x=t, y=value,colour=key)) + geom_line() + ggtitle("Resulting Kernel Shapes")
x = seq(0, 500, by=0.1)
expKernParams = mean(HPObjectExtractKernelParamsExp(terrorHawkesResultsParametric$expKernel[[1]])[-(1:burninParametric)])
geoKernParams = mean(HPObjectExtractKernelParamsExp(terrorHawkesResultsParametric$geoKernel[[1]])[-(1:burninParametric)])
lnKernParams = lapply(HPObjectExtractKernelParamsLogNormal(terrorHawkesResultsParametric$lnKernel[[1]]), function(x) mean(x[-(1:burninParametric)]))
dirLNFunc = HPFitObjectExtractKernelFunction(terrorHawkesResultsNonParametric[[1]][[1]])[-(1:burninNonParametric)]
dirGeoFunc = HPFitObjectExtractKernelFunction(terrorHawkesResultsNonParametric[[2]][[1]])[-(1:burninNonParametric)]
geoFunc = GeometricKernelCreate(initialValue = geoKernParams)
dirLNFuncEval = Reduce("+", lapply(dirLNFunc, function(y) y(x)))/length(dirLNFunc)
dirGeoFuncEval = Reduce("+", lapply(dirGeoFunc, function(y) y(x)))/length(dirGeoFunc)
y = gather(data.frame(exp = dexp(x, expKernParams), ln=dlnorm(x, lnKernParams$mu, lnKernParams$sd), geo = geoFunc$func(x), geoDir = dirGeoFuncEval, lnDir=dirLNFuncEval))
y$t = x
ggplot(y, aes(x=t, y=value,colour=key)) + geom_line() + ggtitle("Resulting Kernel Shapes")
save(expFitRes, lnFitRes, geoFitRes, dirFitRes, dirGeoFitRes, file="terrorHawkesResults.RData")
save(modelCheckFrame, file="tempModelCheckGraph.RData")
setwd("~/Documents/PhD/Research/Terrorism Data")
dt = read.csv("RAND_Database_of_Worldwide_Terrorism_Incidents.csv", head=T, stringsAsFactors = FALSE)
dt = read.csv("RAND_Database_of_Worldwide_Terrorism_Incidents.csv", head=T, stringsAsFactors = FALSE)
d = as.Date(dt$Date, format= '%d-%b-%y')
d = as.Date(ifelse(d > "2016-08-15", format(d, "19%y-%m-%d"), format(d)))
dt$Date = d
aggFrame = aggregate(dt$Fatalities, by=list(Category=dt$Date), FUN=sum)
names(aggFrame) = c("Date", "Fatalities")
load("terrorHawkesResults.RData")
load("terrorGPDResults.RData")
load("tempModelCheckFrame.RData")
setwd("~/Documents/dm13450.github.io/_drafts")
